openapi: "3.0.0"
info:
  version: 1.0.0
  title: Library
  license:
    name: MIT
paths:
  /books:
    get:
      summary: List all books
      operationId: listBooks
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of books
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Books"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Add books
      operationId: addBooks
      requestBody:
        description: Book information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Books'
      responses:
        '201':
          description: Null response
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /books/{bookId}:
    get:
      summary: Info for a specific book
      operationId: showBookById
      parameters:
        - name: bookId
          in: path
          required: true
          description: The id of the book to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Book:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        author:
          type: string
        publisher:
          type: string
    Books:
      type: array
      items:
        $ref: "#/components/schemas/Book"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
