/*
 * Note: this file originally auto-generated by mib2c using
 *       version $ of $
 *
 * $Id:$
 */
#ifndef DIRECTORYCONTENTTABLE_H
#define DIRECTORYCONTENTTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
/* *INDENT-OFF*  */
config_add_mib(MONITOR - MIB)
    config_require(MONITOR
                   - MIB / DirectoryContentTable
                         / DirectoryContentTable_interface)
        config_require(MONITOR
                       - MIB / DirectoryContentTable
                             / DirectoryContentTable_data_access)
            config_require(MONITOR
                           - MIB / DirectoryContentTable
                                 / DirectoryContentTable_data_get)
                config_require(MONITOR
                               - MIB / DirectoryContentTable
                                     / DirectoryContentTable_data_set)
/* *INDENT-ON*  */

/* OID and column number definitions for DirectoryContentTable */
#include "DirectoryContentTable_oids.h"

/* enum definions */
#include "DirectoryContentTable_enums.h"

    /* *********************************************************************
     * function declarations
     */
    void init_DirectoryContentTable(void);
void shutdown_DirectoryContentTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table DirectoryContentTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * MONITOR-MIB::DirectoryContentTable is subid 4 of netSnmpModuleIDs.
 * Its status is Current.
 * OID: .1.3.6.1.4.1.8072.3.1.4, length: 10
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
/*
 * TODO:101:o: |-> Review DirectoryContentTable registration context.
 */
typedef netsnmp_data_list DirectoryContentTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review DirectoryContentTable data context structure.
 * This structure is used to represent the data for DirectoryContentTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * DirectoryContentTable.
 */
typedef struct DirectoryContentTable_data_s {

    /*
     * DirectoryEntryPath(2)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/r/d/h
     */
    char DirectoryEntryPath[65535];
    size_t DirectoryEntryPath_len; /* # of char elements, not bytes */

    /*
     * DirectoryEntryMask(3)/INTEGER32/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
     */
    long DirectoryEntryMask;

} DirectoryContentTable_data;


/*
 * TODO:120:r: |-> Review DirectoryContentTable mib index.
 * This structure is used to represent the index for DirectoryContentTable.
 */
typedef struct DirectoryContentTable_mib_index_s {

    /*
     * DirectoryEntryIndex(1)/INTEGER32/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
     */
    long DirectoryEntryIndex;


} DirectoryContentTable_mib_index;

/*
 * TODO:121:r: |   |-> Review DirectoryContentTable max index length.
 * If you KNOW that your indexes will never exceed a certain
 * length, update this macro to that length.
*/
#define MAX_DirectoryContentTable_IDX_LEN 1


/* *********************************************************************
 * TODO:130:o: |-> Review DirectoryContentTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * DirectoryContentTable_rowreq_ctx pointer.
 */
typedef struct DirectoryContentTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index oid_idx;
    oid oid_tmp[MAX_DirectoryContentTable_IDX_LEN];

    DirectoryContentTable_mib_index tbl_idx;

    DirectoryContentTable_data data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to DirectoryContentTable rowreq
     * context.
     */

    /*
     * storage for future expansion
     */
    netsnmp_data_list* DirectoryContentTable_data_list;

} DirectoryContentTable_rowreq_ctx;

typedef struct DirectoryContentTable_ref_rowreq_ctx_s {
    DirectoryContentTable_rowreq_ctx* rowreq_ctx;
} DirectoryContentTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
int DirectoryContentTable_pre_request(
    DirectoryContentTable_registration* user_context);
int DirectoryContentTable_post_request(
    DirectoryContentTable_registration* user_context, int rc);

int DirectoryContentTable_rowreq_ctx_init(
    DirectoryContentTable_rowreq_ctx* rowreq_ctx, void* user_init_ctx);
void DirectoryContentTable_rowreq_ctx_cleanup(
    DirectoryContentTable_rowreq_ctx* rowreq_ctx);


DirectoryContentTable_rowreq_ctx* DirectoryContentTable_row_find_by_mib_index(
    DirectoryContentTable_mib_index* mib_idx);

extern const oid DirectoryContentTable_oid[];
extern const int DirectoryContentTable_oid_size;


#include "DirectoryContentTable_interface.h"
#include "DirectoryContentTable_data_access.h"
#include "DirectoryContentTable_data_get.h"
#include "DirectoryContentTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* DIRECTORYCONTENTTABLE_H */
/** @} */
